package org.sugarj.driver.transformations.renameRules;

import org.strategoxt.stratego_lib.*;
import org.strategoxt.lang.*;
import org.spoofax.interpreter.terms.*;
import static org.strategoxt.lang.Term.*;
import org.spoofax.interpreter.library.AbstractPrimitive;
import java.util.ArrayList;
import java.lang.ref.WeakReference;

@SuppressWarnings("unused") public class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer 
{ 
  @Override public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext)
  { 
    register(context, compiledContext, context.getVarScope());
  }

  @Override public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader)
  { 
    registerLazy(context, compiledContext, classLoader, context.getVarScope());
  }

  private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("renameRules");
    renameRules.init(compiledContext);
    varScope.addSVar("rename_rules_0_2", new InteropSDefT(rename_rules_0_2.instance, context));
    varScope.addSVar("rename_rule_0_2", new InteropSDefT(rename_rule_0_2.instance, context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT($Rule$Names_1_0.instance, context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT($R$Dec$T_3_0.instance, context));
    varScope.addSVar("RDec_2_0", new InteropSDefT($R$Dec_2_0.instance, context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT($R$Dec$No$Args_1_0.instance, context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT($Dyn$Rule$Scope$Id_1_0.instance, context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Scope$Id_2_0.instance, context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT($Dyn$Rule$Id_1_0.instance, context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT($Add$Label$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT($Set$Dyn$Rule$Depends_3_0.instance, context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT($Dyn$Rule$Assign$Add_2_0.instance, context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT($Dyn$Rule$Assign_2_0.instance, context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT($Set$Dyn$Rule$Match_2_0.instance, context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT($Add$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT($Set$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT($Undefine$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT($Add$Scope$Label_2_0.instance, context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT($Scope$Labels_1_0.instance, context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT($With$Clause_1_0.instance, context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT($Where$Clause_1_0.instance, context));
    varScope.addSVar("Rule_3_0", new InteropSDefT($Rule_3_0.instance, context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT($Rule$No$Cond_2_0.instance, context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT($R$Def$T_4_0.instance, context));
    varScope.addSVar("RDef_3_0", new InteropSDefT($R$Def_3_0.instance, context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT($R$Def$No$Args_2_0.instance, context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT($Overlay_3_0.instance, context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT($Overlay$No$Args_2_0.instance, context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT($Switch$Case_2_0.instance, context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT($Strategy$Curly_1_0.instance, context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT($List$Var_1_0.instance, context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT($Import$Wildcard_1_0.instance, context));
    varScope.addSVar("Import_1_0", new InteropSDefT($Import_1_0.instance, context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT($Overlays_1_0.instance, context));
    varScope.addSVar("Rules_1_0", new InteropSDefT($Rules_1_0.instance, context));
    varScope.addSVar("Signature_1_0", new InteropSDefT($Signature_1_0.instance, context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT($Strategies_1_0.instance, context));
    varScope.addSVar("Imports_1_0", new InteropSDefT($Imports_1_0.instance, context));
    varScope.addSVar("Specification_1_0", new InteropSDefT($Specification_1_0.instance, context));
    varScope.addSVar("Module_2_0", new InteropSDefT($Module_2_0.instance, context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT($Paren$Strat_1_0.instance, context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT($Default$Var$Dec_1_0.instance, context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT($Var$Dec_2_0.instance, context));
    varScope.addSVar("SDef_3_0", new InteropSDefT($S$Def_3_0.instance, context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT($S$Def$No$Args_2_0.instance, context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT($Ext$S$Def_3_0.instance, context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT($Ext$S$Def$Inl_4_0.instance, context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT($S$Def$T_4_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT($Dyn$Rule$Intersect$Union_4_0.instance, context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT($Dyn$Rule$Union_3_0.instance, context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT($Dyn$Rule$Intersect_3_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT($Dyn$Rule$Intersect$Union$Fix_3_0.instance, context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT($Dyn$Rule$Union$Fix_2_0.instance, context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT($Dyn$Rule$Intersect$Fix_2_0.instance, context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT($Gen$Dyn$Rules_1_0.instance, context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT($Dyn$Rule$Scope_2_0.instance, context));
    varScope.addSVar("Assign_2_0", new InteropSDefT($Assign_2_0.instance, context));
    varScope.addSVar("AM_2_0", new InteropSDefT($A$M_2_0.instance, context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT($Switch$Choice_3_0.instance, context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT($Switch$Choice$No$Otherwise_2_0.instance, context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT($If$Then_2_0.instance, context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT($Cond$Choice_3_0.instance, context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT($R$Choice_2_0.instance, context));
    varScope.addSVar("Choice_2_0", new InteropSDefT($Choice_2_0.instance, context));
    varScope.addSVar("SRule_1_0", new InteropSDefT($S$Rule_1_0.instance, context));
    varScope.addSVar("LRule_1_0", new InteropSDefT($L$Rule_1_0.instance, context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT($Call$No$Args_1_0.instance, context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT($Explode$Cong_2_0.instance, context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT($List$Cong_2_0.instance, context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT($List$Cong$No$Tail_1_0.instance, context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT($Tuple$Cong_2_0.instance, context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT($Empty$Tuple$Cong_0_0.instance, context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT($Anno$Cong_2_0.instance, context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT($Cong$Q_2_0.instance, context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT($Char$Cong_1_0.instance, context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT($Real$Cong_1_0.instance, context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT($Int$Cong_1_0.instance, context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT($Str$Cong_1_0.instance, context));
    varScope.addSVar("Prim_2_0", new InteropSDefT($Prim_2_0.instance, context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT($Prim$No$Args_1_0.instance, context));
    varScope.addSVar("Test_1_0", new InteropSDefT($Test_1_0.instance, context));
    varScope.addSVar("With_1_0", new InteropSDefT($With_1_0.instance, context));
    varScope.addSVar("Where_1_0", new InteropSDefT($Where_1_0.instance, context));
    varScope.addSVar("Not_1_0", new InteropSDefT($Not_1_0.instance, context));
    varScope.addSVar("Rec_2_0", new InteropSDefT($Rec_2_0.instance, context));
    varScope.addSVar("LChoice_2_0", new InteropSDefT($L$Choice_2_0.instance, context));
    varScope.addSVar("BA_2_0", new InteropSDefT($B$A_2_0.instance, context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT($Scope$Default_1_0.instance, context));
    varScope.addSVar("Call_2_0", new InteropSDefT($Call_2_0.instance, context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT($Import$Term_1_0.instance, context));
    varScope.addSVar("All_1_0", new InteropSDefT($All_1_0.instance, context));
    varScope.addSVar("One_1_0", new InteropSDefT($One_1_0.instance, context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT($Prim$T_3_0.instance, context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT($Guarded$L$Choice_3_0.instance, context));
    varScope.addSVar("Seq_2_0", new InteropSDefT($Seq_2_0.instance, context));
    varScope.addSVar("Scope_2_0", new InteropSDefT($Scope_2_0.instance, context));
    varScope.addSVar("Build_1_0", new InteropSDefT($Build_1_0.instance, context));
    varScope.addSVar("Match_1_0", new InteropSDefT($Match_1_0.instance, context));
    varScope.addSVar("Id_0_0", new InteropSDefT($Id_0_0.instance, context));
    varScope.addSVar("Fail_0_0", new InteropSDefT($Fail_0_0.instance, context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT($Call$Dynamic_3_0.instance, context));
    varScope.addSVar("CallT_3_0", new InteropSDefT($Call$T_3_0.instance, context));
    varScope.addSVar("Let_2_0", new InteropSDefT($Let_2_0.instance, context));
    varScope.addSVar("SVar_1_0", new InteropSDefT($S$Var_1_0.instance, context));
    varScope.addSVar("FunType_2_0", new InteropSDefT($Fun$Type_2_0.instance, context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT($Const$Type_1_0.instance, context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT($Ext$Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT($Ext$Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT($Ext$Op$Decl_2_0.instance, context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT($Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT($Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT($Op$Decl_2_0.instance, context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT($Sort$Tuple_1_0.instance, context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT($Sort$List$Tl_2_0.instance, context));
    varScope.addSVar("SortList_1_0", new InteropSDefT($Sort$List_1_0.instance, context));
    varScope.addSVar("Sort_2_0", new InteropSDefT($Sort_2_0.instance, context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT($Sort$No$Args_1_0.instance, context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT($Sort$Var_1_0.instance, context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT($Constructors_1_0.instance, context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT($Sorts_1_0.instance, context));
    varScope.addSVar("Wld_0_0", new InteropSDefT($Wld_0_0.instance, context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT($Root$App_1_0.instance, context));
    varScope.addSVar("App_2_0", new InteropSDefT($App_2_0.instance, context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT($No$Anno$List_1_0.instance, context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT($Anno$List_2_0.instance, context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT($Build$Default_1_0.instance, context));
    varScope.addSVar("As_2_0", new InteropSDefT($As_2_0.instance, context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT($List$Tail_2_0.instance, context));
    varScope.addSVar("List_1_0", new InteropSDefT($List_1_0.instance, context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT($Tuple_1_0.instance, context));
    varScope.addSVar("Char_1_0", new InteropSDefT($Char_1_0.instance, context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT($Build$Default$P$T_1_0.instance, context));
    varScope.addSVar("Explode_2_0", new InteropSDefT($Explode_2_0.instance, context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT($Op$Q_2_0.instance, context));
    varScope.addSVar("Op_2_0", new InteropSDefT($Op_2_0.instance, context));
    varScope.addSVar("Str_1_0", new InteropSDefT($Str_1_0.instance, context));
    varScope.addSVar("Real_1_0", new InteropSDefT($Real_1_0.instance, context));
    varScope.addSVar("Int_1_0", new InteropSDefT($Int_1_0.instance, context));
    varScope.addSVar("Var_1_0", new InteropSDefT($Var_1_0.instance, context));
  }

  private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("renameRules");
    renameRules.init(compiledContext);
    varScope.addSVar("rename_rules_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.rename_rules_0_2", context));
    varScope.addSVar("rename_rule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.rename_rule_0_2", context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Rule$Names_1_0", context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Dec$T_3_0", context));
    varScope.addSVar("RDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Dec_2_0", context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Dec$No$Args_1_0", context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Scope$Id_1_0", context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Labeled$Dyn$Rule$Scope$Id_2_0", context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Id_1_0", context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Add$Label$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Labeled$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Set$Dyn$Rule$Depends_3_0", context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Assign$Add_2_0", context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Assign_2_0", context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Set$Dyn$Rule$Match_2_0", context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Add$Dyn$Rule_2_0", context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Set$Dyn$Rule_2_0", context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Undefine$Dyn$Rule_2_0", context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Add$Scope$Label_2_0", context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Scope$Labels_1_0", context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$With$Clause_1_0", context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Where$Clause_1_0", context));
    varScope.addSVar("Rule_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Rule_3_0", context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Rule$No$Cond_2_0", context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Def$T_4_0", context));
    varScope.addSVar("RDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Def_3_0", context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Def$No$Args_2_0", context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Overlay_3_0", context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Overlay$No$Args_2_0", context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Switch$Case_2_0", context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Strategy$Curly_1_0", context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$List$Var_1_0", context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Import$Wildcard_1_0", context));
    varScope.addSVar("Import_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Import_1_0", context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Overlays_1_0", context));
    varScope.addSVar("Rules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Rules_1_0", context));
    varScope.addSVar("Signature_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Signature_1_0", context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Strategies_1_0", context));
    varScope.addSVar("Imports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Imports_1_0", context));
    varScope.addSVar("Specification_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Specification_1_0", context));
    varScope.addSVar("Module_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Module_2_0", context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Paren$Strat_1_0", context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Default$Var$Dec_1_0", context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Var$Dec_2_0", context));
    varScope.addSVar("SDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$S$Def_3_0", context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$S$Def$No$Args_2_0", context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Ext$S$Def_3_0", context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Ext$S$Def$Inl_4_0", context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$S$Def$T_4_0", context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Intersect$Union_4_0", context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Union_3_0", context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Intersect_3_0", context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Intersect$Union$Fix_3_0", context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Union$Fix_2_0", context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Intersect$Fix_2_0", context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Gen$Dyn$Rules_1_0", context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Dyn$Rule$Scope_2_0", context));
    varScope.addSVar("Assign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Assign_2_0", context));
    varScope.addSVar("AM_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$A$M_2_0", context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Switch$Choice_3_0", context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Switch$Choice$No$Otherwise_2_0", context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$If$Then_2_0", context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Cond$Choice_3_0", context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$R$Choice_2_0", context));
    varScope.addSVar("Choice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Choice_2_0", context));
    varScope.addSVar("SRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$S$Rule_1_0", context));
    varScope.addSVar("LRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$L$Rule_1_0", context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Call$No$Args_1_0", context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Explode$Cong_2_0", context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$List$Cong_2_0", context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$List$Cong$No$Tail_1_0", context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Tuple$Cong_2_0", context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Empty$Tuple$Cong_0_0", context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Anno$Cong_2_0", context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Cong$Q_2_0", context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Char$Cong_1_0", context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Real$Cong_1_0", context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Int$Cong_1_0", context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Str$Cong_1_0", context));
    varScope.addSVar("Prim_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Prim_2_0", context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Prim$No$Args_1_0", context));
    varScope.addSVar("Test_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Test_1_0", context));
    varScope.addSVar("With_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$With_1_0", context));
    varScope.addSVar("Where_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Where_1_0", context));
    varScope.addSVar("Not_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Not_1_0", context));
    varScope.addSVar("Rec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Rec_2_0", context));
    varScope.addSVar("LChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$L$Choice_2_0", context));
    varScope.addSVar("BA_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$B$A_2_0", context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Scope$Default_1_0", context));
    varScope.addSVar("Call_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Call_2_0", context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Import$Term_1_0", context));
    varScope.addSVar("All_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$All_1_0", context));
    varScope.addSVar("One_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$One_1_0", context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Prim$T_3_0", context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Guarded$L$Choice_3_0", context));
    varScope.addSVar("Seq_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Seq_2_0", context));
    varScope.addSVar("Scope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Scope_2_0", context));
    varScope.addSVar("Build_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Build_1_0", context));
    varScope.addSVar("Match_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Match_1_0", context));
    varScope.addSVar("Id_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Id_0_0", context));
    varScope.addSVar("Fail_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Fail_0_0", context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Call$Dynamic_3_0", context));
    varScope.addSVar("CallT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Call$T_3_0", context));
    varScope.addSVar("Let_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Let_2_0", context));
    varScope.addSVar("SVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$S$Var_1_0", context));
    varScope.addSVar("FunType_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Fun$Type_2_0", context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Const$Type_1_0", context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Ext$Op$Decl$Inj_1_0", context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Ext$Op$Decl$Q_2_0", context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Ext$Op$Decl_2_0", context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Op$Decl$Inj_1_0", context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Op$Decl$Q_2_0", context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Op$Decl_2_0", context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort$Tuple_1_0", context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort$List$Tl_2_0", context));
    varScope.addSVar("SortList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort$List_1_0", context));
    varScope.addSVar("Sort_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort_2_0", context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort$No$Args_1_0", context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sort$Var_1_0", context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Constructors_1_0", context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Sorts_1_0", context));
    varScope.addSVar("Wld_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Wld_0_0", context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Root$App_1_0", context));
    varScope.addSVar("App_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$App_2_0", context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$No$Anno$List_1_0", context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Anno$List_2_0", context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Build$Default_1_0", context));
    varScope.addSVar("As_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$As_2_0", context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$List$Tail_2_0", context));
    varScope.addSVar("List_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$List_1_0", context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Tuple_1_0", context));
    varScope.addSVar("Char_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Char_1_0", context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Build$Default$P$T_1_0", context));
    varScope.addSVar("Explode_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Explode_2_0", context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Op$Q_2_0", context));
    varScope.addSVar("Op_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Op_2_0", context));
    varScope.addSVar("Str_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Str_1_0", context));
    varScope.addSVar("Real_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Real_1_0", context));
    varScope.addSVar("Int_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Int_1_0", context));
    varScope.addSVar("Var_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.renameRules.$Var_1_0", context));
  }
}